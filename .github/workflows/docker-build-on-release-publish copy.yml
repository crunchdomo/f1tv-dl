# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Docker Build and Source Release

on:
 workflow_dispatch:
    branches:
      - main
    inputs:
      version_bump_type:
        description: 'Version Bump Type (major, minor, patch)'
        required: true
        default: 'minor'
      version_metadata_path:
        description: 'Path to file containing Version string'
        required: true
        default: 'VERSION'
      generic_version_template:
        description: 'Go Template used for updating metadata file'
        required: true
        default: 'version := "%d.%d.%d"'
    
jobs:
  build:
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['14']

    steps:
    - 
      uses: actions/checkout@v2

    - 
      name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - # Project must build and run before it's released
      run: |
        npm ci
        npm test --maxWorkers=2
      timeout-minutes: 5
      env:
        RACEURL: ${{ secrets.RACEURL }}
        EPISODEURL: ${{ secrets.EPISODEURL }}
        RACESLUG: ${{ secrets.RACESLUG }}
        EPISODESLUG: ${{ secrets.EPISODESLUG }}
        VALIDEPISODEURL: ${{ secrets.VALIDEPISODEURL }}
        VALIDRACESESSIONURL: ${{ secrets.VALIDRACESESSIONURL }}
        VALIDHAMSESSIONURL: ${{ secrets.VALIDHAMSESSIONURL }}
        F1TV_USER: ${{ secrets.F1TV_USER }}
        F1TV_PASS: ${{ secrets.F1TV_PASS }}
    - 
      run: |
        echo version_bump_type: ${{ github.event.inputs.version_bump_type }}
        echo version_metadata_path: ${{ github.event.inputs.version_metadata_path }}
        echo generic_version_template: ${{ github.event.inputs.generic_version_template }}}

    - 
      name: Generic Version Bumpr
      id: semver
      uses: PackagrIO/action-bumpr-generic@v0.0.1
      with:
        version_bump_type: ${{ github.event.inputs.version_bump_type }}
        version_metadata_path: ${{ github.event.inputs.version_metadata_path }}
        generic_version_template: ${{ github.event.inputs.generic_version_template }}

    - 
      run: echo version is ${{ steps.semver.outputs.release_version }}

    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/f1tv-dl-docker:latest
          ghcr.io/${{ github.repository_owner }}/f1tv-dl-docker:${{ steps.semver.outputs.release_version }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.semver.outputs.release_version }}
        release_name: fltv-dl ${{ steps.bump_version.outputs.release_version }}
        draft: false
        prerelease: false

    - 
      name: Commit changes
      uses: EndBug/add-and-commit@v5
      with:
        author_name: the Dave
        author_email: dave@digitalnoise.net
        message: "Bump release version in VERSION file to ${{ steps.semver.outputs.release_version }}"
        cwd: ${{ env.PROJECT_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




