# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Docker Build and Source Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "npm version [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease [--preid=<prerelease-id>] | from-git]"
        required: true
        default: "patch"
      release_description:
        description: "Release notes"
        required: true
        default: "enter release notes"

jobs:
  release-build-docker:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        node-version: ["14"]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

#  OLD VERSION LOGIC
#      - name: Set ENV from VERSION
#        run: |
#          cat VERSION >> $GITHUB_ENV
#
#      - name: Display ENV parameters
#        run: |
#          echo "::debug::Bump Type: ${{ github.event.inputs.version_type }}"
#          echo "::debug::Version: ${{ env.VERSION }}"
#
#      - name: Simple Semver
#        id: semver
#        uses: matt-FFFFFF/simple-semver@v0.1.0
#        with:
#          semver-input: ${{ env.VERSION }}
#          increment: ${{ github.event.inputs.version_type }}
#
#      - name: New version is ${{ steps.semver.outputs.semver }}
#        run: echo "::debug::New version is ${{ steps.semver.outputs.semver }}"

      - name: Run npm version ${{ github.event.inputs.version_type }}
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version

      - name: Read package.json
        id: read-package-json
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=package-json::$content"

      - name: Set version
        id: semver
        run: |
          echo "::set-output name=semver::${{fromJson(steps.read-package-json.outputs.package-json).version}}"

      - name: New version is ${{ steps.semver.outputs.semver }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.5.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/f1tv-dl-docker:latest
            ghcr.io/${{ github.repository_owner }}/f1tv-dl-docker:${{ steps.semver.outputs.semver }}


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.semver }}
          release_name: fltv-dl ${{ steps.semver.outputs.semver }}
          body: ${{ github.event.inputs.release_description }}
          draft: false
          prerelease: false

      - name: Save new VERSION
        run: echo VERSION=${{ steps.semver.outputs.semver }} >VERSION

      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        with:
          author_name: the Dave
          author_email: dave@digitalnoise.net
          message: "Bump release version in VERSION file to ${{ steps.semver.outputs.semver }}"
          cwd: ${{ env.PROJECT_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
